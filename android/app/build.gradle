def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    namespace "com.myapp"
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        gms.java.srcDirs += 'src/gms/kotlin'
        hms.java.srcDirs += 'src/hms/kotlin'
    }

    defaultConfig {
        applicationId "com.myapp"
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    flavorDimensions "services"
    
    productFlavors {
        gms {
            dimension "services"
            applicationId "com.myapp.gms"
            resValue "string", "app_name", "My App GMS"
        }
        
        hms {
            dimension "services"
            applicationId "com.myapp.hms"
            resValue "string", "app_name", "My App HMS"
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.debug
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        
        debug {
            applicationIdSuffix ".debug"
            debuggable true
        }
    }

    buildFeatures {
        buildConfig true
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    
    // GMS dependencies
    gmsImplementation 'com.google.android.gms:play-services-base:18.2.0'
    gmsImplementation 'com.google.android.gms:play-services-maps:18.2.0'
    
    // HMS dependencies
    hmsImplementation 'com.huawei.hms:base:6.11.0.300'
    hmsImplementation 'com.huawei.hms:maps:6.11.1.301'
}
